// Пояснения кодов

// 1)

// const a = { hello: 'student' };
// function getA(b) {
//     b = null
// };
// getA(a)
// console.log(a);

// Этапи
// 1. Создает переменную const a, которая дает посылание на объект { hello: 'student' };
// 2. Создаем функцию function getA(b), которую называем getA и даем значение функции (b)
// 3. Мы запускаем функцию getA(a) и происходит, что внутри функции b мы не присваевается посылание { hello: 'student' } =>
// т.к. у нас нет взаимодействей с переменной const, a если было бы написано в нутри функции вот так function getA(b) { b.hello = null}, то значение изменилось на { hello: null };
// 4. b = null не несет никакого значения посылания объекта, для console.log(a), потому что b уже равно null;
// 5. В console.log(a) получается посылание на 1 объект { hello: 'student' };

// 2)

// const a = {};
// function getA(b) {
//     b.bye = 'teacher'
// };
// getA(a)
// console.log(a);

// Этапи
// 1. Создает переменную const a, которая дает посылание на объект {};
// 2. Создаем функцию function getA(b), которую называем getA и даем значение функции (b);
// 3. Мы запускаем функцию getA(a) и происходит, что внутри функции b мы  присваевается посылание объекта {}
// 4. Внутри функции  function getA(b) {b.bye = 'teacher'}; получается присвоение {}
// 5. В console.log(a) получается посылание на объект { bye: 'teacher' }, почему так произошло, объект присваевает значения функции function getA(b) т.е b.bye = 'teacher'

